services:
  # Eureka Server
  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - anti-plagiarism-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - anti-plagiarism-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # File Storage Service
#  file-storage-service:
#    build:
#      context: .
#      dockerfile: file-storage-service/Dockerfile
#    depends_on:
#      eureka-server:
#        condition: service_healthy
#      file-storage-db:
#        condition: service_healthy
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://file-storage-db:5432/file_storage_db
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
#    volumes:
#      - file-storage-data:/file-storage
#    networks:
#      - anti-plagiarism-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # File Analysis Service
#  file-analysis-service:
#    build:
#      context: .
#      dockerfile: file-analysis-service/Dockerfile
#    depends_on:
#      eureka-server:
#        condition: service_healthy
#      file-storage-service:
#        condition: service_healthy
#      file-analysis-db:
#        condition: service_healthy
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://file-analysis-db:5432/file_analysis_db
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
#      - FILE_STORAGE_SERVICE_URL=http://file-storage-service:8081
#    networks:
#      - anti-plagiarism-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # PostgreSQL for File Storage Service
  file-storage-db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: file_storage_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - file-storage-db-data:/var/lib/postgresql/data
    networks:
      - anti-plagiarism-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for File Analysis Service
  file-analysis-db:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: file_analysis_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - file-analysis-db-data:/var/lib/postgresql/data
    networks:
      - anti-plagiarism-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  anti-plagiarism-network:
    driver: bridge

volumes:
  file-storage-data:
  file-storage-db-data:
  file-analysis-db-data:
